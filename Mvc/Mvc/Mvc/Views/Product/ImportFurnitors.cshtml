@model Mvc.Domain.ViewModels.CompareFurnitorsViewModel
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("CompareFurnitors", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken();
    <div class="form-horizontal">
        <h4>Compare Furnitors</h4>
        <hr />
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId1", (IEnumerable<SelectListItem>)ViewBag.CategoryId1, "--Select--",new { id = "CategoryId1", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId2", (IEnumerable<SelectListItem>)ViewBag.CategoryId2, "--Select--", new { id = "CategoryId2", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId3", (IEnumerable<SelectListItem>)ViewBag.CategoryId3, "--Select--", new { id = "CategoryId3", @class = "form-control" })
                 @Html.ValidationMessageFor(model => model.CategoryId3, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId4", (IEnumerable<SelectListItem>)ViewBag.CategoryId4, "--Select--", new { id = "CategoryId4", @class = "form-control" })
               @Html.ValidationMessageFor(model => model.CategoryId4, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DeleteExisting, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(m => m.DeleteExisting, new { @class = "", @checked = "checked", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.DeleteExisting, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <tr>
                <td>
                    @Html.LabelFor(model => model.ComparebyMarka, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-1">
                        @Html.CheckBoxFor(m => m.ComparebyMarka, new { @class = "" })
                        @Html.ValidationMessageFor(model => model.ComparebyMarka, "", new { @class = "text-danger" })
                    </div>
                </td>
                <td>
                    @Html.LabelFor(model => model.MarkaName1, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        @Html.DropDownList("MarkaName1", (IEnumerable<SelectListItem>)ViewBag.MarkaName1, "--Select--", new { id = "MarkaName1", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MarkaName1, "", new { @class = "text-danger" })
                    </div>
                </td>
                <td>
                    @Html.LabelFor(model => model.MarkaName2, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        @Html.DropDownList("MarkaName2", (IEnumerable<SelectListItem>)ViewBag.MarkaName2, "--Select--", new { id = "MarkaName2", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MarkaName2, "", new { @class = "text-danger" })
                    </div>
                </td>
                <td>
                    @Html.LabelFor(model => model.MarkaName3, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        @Html.DropDownList("MarkaName3", (IEnumerable<SelectListItem>)ViewBag.MarkaName3, "--Select--", new { id = "MarkaName3", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MarkaName3, "", new { @class = "text-danger" })
                    </div>
                </td>
                <td>
                    @Html.LabelFor(model => model.MarkaName4, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        @Html.DropDownList("MarkaName4", (IEnumerable<SelectListItem>)ViewBag.MarkaName4, "--Select--", new { id = "MarkaName4", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MarkaName4, "", new { @class = "text-danger" })
                    </div>
                </td>
                <td>
                    @Html.LabelFor(model => model.MarkaName5, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        @Html.DropDownList("MarkaName5", (IEnumerable<SelectListItem>)ViewBag.MarkaName5, "--Select--", new { id = "MarkaName5", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MarkaName5, "", new { @class = "text-danger" })
                    </div>
                </td>
                </tr>
            </div>
       
        <br/>
        <input type="submit" value="Compare Furnitors" class="btn btn-default" />
        @*<input type="submit" value="Compare Furnitors and Export" class="btn btn-default" />*@
        <br />
        <br />

    </div>

}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

